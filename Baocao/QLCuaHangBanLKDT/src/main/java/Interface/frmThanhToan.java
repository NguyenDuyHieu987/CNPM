/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface;

import Controllers.GiamGiaController;
import Controllers.LinhKienController;
import Controllers.LinhKienDaBanController;
import Controllers.ThanhToanController;
import Models.HoaDon;
import Models.LinhKien;
import Models.LinhKienDaBan;
import Models.MaGiamGia;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedOutputStream;
import java.io.FileNotFoundException;
import java.math.BigDecimal;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFChartSheet;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author ADMIN
 */
public final class frmThanhToan extends javax.swing.JFrame {

    private String LoaiLinhKien;
    private String Hang;
    private String TaiKhoan;
    private String MatKhau;
    private DefaultTableModel defaultTableModelLinhKien;
    private DefaultTableModel defaultTableModelHoaDon;
    private ThanhToanController thanhToanController;
    private LinhKienController linhKienController;
    private LinhKienDaBanController linhKienDaBanController;
    private GiamGiaController giamGiaController;

    /**
     * Creates new form NewJFrame
     */
    public frmThanhToan() {
        initComponents();
        InsertDataTable();

    }

    public frmThanhToan(String TK, String MK, String LoaiLK, String hang) {
        initComponents();
        this.TaiKhoan = TK;
        this.MatKhau = MK;
        this.LoaiLinhKien = LoaiLK;
        this.Hang = hang;
        InsertDataTable();
        PopUpMenu();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void InsertDataTable() {
        thanhToanController = new ThanhToanController();
        linhKienController = new LinhKienController();
        linhKienDaBanController = new LinhKienDaBanController();
        giamGiaController = new GiamGiaController();

        defaultTableModelHoaDon = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        defaultTableModelLinhKien = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tbHoaDon.setModel(defaultTableModelHoaDon);
        defaultTableModelHoaDon.addColumn("Mã hóa đơn");
        defaultTableModelHoaDon.addColumn("Mã linh kiện");
        defaultTableModelHoaDon.addColumn("Só lượng");
        defaultTableModelHoaDon.addColumn("Tổng tiền");
        defaultTableModelHoaDon.addColumn("Ngày mua");
        defaultTableModelHoaDon.addColumn("Hình thức thanh toán");
        defaultTableModelHoaDon.addColumn("Mã giảm giá");
//        tbHoaDon.getColumnModel().getColumn(6).setPreferredWidth(100);

        tbLinkKien.setModel(defaultTableModelLinhKien);
        defaultTableModelLinhKien.addColumn("Mã linh kiện");
        defaultTableModelLinhKien.addColumn("Tên linh kiện");
        defaultTableModelLinhKien.addColumn("Loại");
        defaultTableModelLinhKien.addColumn("Số lượng");
        defaultTableModelLinhKien.addColumn("Giá bán");
        defaultTableModelLinhKien.addColumn("Hãng");
        defaultTableModelLinhKien.addColumn("Hạn bảo hành");
//        tbLinkKien.getColumnModel().getColumn(1).setPreferredWidth(150);

        LoadDataTable();
        txtMaHD.requestFocus();
    }

    public void LoadDataTable() {
        cbSearchMaHD.removeAllItems();
        List<HoaDon> hoaDons = thanhToanController.GetAllHoaDon();

        for (HoaDon hoaDon : hoaDons) {
            defaultTableModelHoaDon.addRow(new Object[]{
                hoaDon.getMaHD(),
                hoaDon.getMaLK(),
                hoaDon.getSoLuong(),
                new BigDecimal(hoaDon.getTongTien()).longValue(),
                hoaDon.getNgayMua(),
                hoaDon.getHinhThuc(),
                hoaDon.getMaGiamGia(),});

            cbSearchMaHD.addItem(hoaDon.getMaHD());
        }

        List<LinhKien> linhKiens = linhKienController.GetAllLinhKien();

        for (LinhKien linhKien : linhKiens) {
            defaultTableModelLinhKien.addRow(new Object[]{
                linhKien.getMaLK(),
                linhKien.getTenLK(),
                linhKien.getLoai(),
                linhKien.getSoLuong(),
                linhKien.getGiaBan(),
                linhKien.getHang(),
                linhKien.getHanBaoHanh(),});

        }

        List<MaGiamGia> maGiamGias = giamGiaController.GetAllMaGiamGia();

        cbMaGiamGia.removeAllItems();
        for (MaGiamGia maGiamGia : maGiamGias) {
            cbMaGiamGia.addItem(maGiamGia.getMaGiamGia());
        }

    }

    public void clearDataTable() {
        while (defaultTableModelLinhKien.getRowCount() > 0) {
            defaultTableModelLinhKien.removeRow(0);
        }
        while (defaultTableModelHoaDon.getRowCount() > 0) {
            defaultTableModelHoaDon.removeRow(0);
        }
    }

    public void ClearTextField() {
        txtMaHD.setText(null);
        txtMaLK.setText(null);
        spinnerSoLuongLK.setValue(0);
        txtNgayMua.setText(null);
        cbHinhThuc.setSelectedItem("Tiền mặt");
        cbMaGiamGia.setSelectedItem("");
    }

    private void PopUpMenu() {
        // TODO add your handling code here:
        if (Hang == null && LoaiLinhKien != null) {
            defaultTableModelLinhKien.setRowCount(0);
            List<LinhKien> linhKiens = linhKienController.SearchLinhKien_Loai(LoaiLinhKien);
            for (LinhKien linhKien : linhKiens) {
                defaultTableModelLinhKien.addRow(new Object[]{
                    linhKien.getMaLK(),
                    linhKien.getTenLK(),
                    linhKien.getLoai(),
                    linhKien.getSoLuong(),
                    linhKien.getGiaBan(),
                    linhKien.getHang(),
                    linhKien.getHanBaoHanh(),});
            }
        } else if (Hang != null && LoaiLinhKien != null) {
            defaultTableModelLinhKien.setRowCount(0);
            List<LinhKien> linhKiens = linhKienController.SearchLinhKien_Loai_Hang(LoaiLinhKien, Hang);
            for (LinhKien linhKien : linhKiens) {
                defaultTableModelLinhKien.addRow(new Object[]{
                    linhKien.getMaLK(),
                    linhKien.getTenLK(),
                    linhKien.getLoai(),
                    linhKien.getSoLuong(),
                    linhKien.getGiaBan(),
                    linhKien.getHang(),
                    linhKien.getHanBaoHanh(),});
            }
        }

    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtMaLK = new javax.swing.JTextField();
        btnClearThue = new javax.swing.JButton();
        txtNgayMua = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        spinnerSoLuongLK = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        cbHinhThuc = new javax.swing.JComboBox<>();
        cbMaGiamGia = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLinkKien = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbHoaDon = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        btnXoa = new javax.swing.JButton();
        btnRefresh1 = new javax.swing.JButton();
        btnTimKiem1 = new javax.swing.JButton();
        cbSearchMaHD = new javax.swing.JComboBox<>();
        btnThanhToan = new javax.swing.JButton();
        btnIn = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Thanh toán");

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("THANH TOÁN ");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-79, -2, 980, 50));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Mã hóa đơn");

        txtMaHD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaHD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaHDKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Mã linh kiện");

        txtMaLK.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaLK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaLKKeyPressed(evt);
            }
        });

        btnClearThue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearThue.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\eraser.png")); // NOI18N
        btnClearThue.setText("Clear");
        btnClearThue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearThueActionPerformed(evt);
            }
        });

        txtNgayMua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNgayMua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNgayMuaKeyPressed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Ngày mua");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Hình thức");

        spinnerSoLuongLK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spinnerSoLuongLK.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerSoLuongLK.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Số lượng");

        cbHinhThuc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbHinhThuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt", "Chuyển khoản" }));

        cbMaGiamGia.setEditable(true);
        cbMaGiamGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Mã giảm giá");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaLK, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(39, 39, 39)
                        .addComponent(spinnerSoLuongLK, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)
                        .addComponent(btnClearThue)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNgayMua)
                    .addComponent(cbHinhThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addComponent(cbMaGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgayMua, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)
                        .addComponent(cbMaGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbHinhThuc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtMaLK, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearThue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addComponent(spinnerSoLuongLK, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách linh kiện", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbLinkKien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbLinkKien.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbLinkKien.setColumnSelectionAllowed(true);
        tbLinkKien.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbLinkKien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbLinkKienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbLinkKien);
        tbLinkKien.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        tbHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbHoaDon.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbHoaDon.setCellSelectionEnabled(true);
        tbHoaDon.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHoaDonMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbHoaDon);
        tbHoaDon.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
        );

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\bin.png")); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnRefresh1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnRefresh1.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\làm mới.png")); // NOI18N
        btnRefresh1.setText("Làm mới");
        btnRefresh1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefresh1ActionPerformed(evt);
            }
        });

        btnTimKiem1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiem1.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\search.png")); // NOI18N
        btnTimKiem1.setText("Tìm kiếm");
        btnTimKiem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiem1ActionPerformed(evt);
            }
        });

        cbSearchMaHD.setEditable(true);
        cbSearchMaHD.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnThanhToan.setBackground(new java.awt.Color(153, 255, 153));
        btnThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThanhToan.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\key.png")); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.setActionCommand("Thanh Toán");
        btnThanhToan.setBorder(null);
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnIn.setBackground(new java.awt.Color(255, 153, 102));
        btnIn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnIn.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\printing.png")); // NOI18N
        btnIn.setText("In");
        btnIn.setBorder(null);
        btnIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\refresh.png")); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbSearchMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTimKiem1)
                .addGap(50, 50, 50)
                .addComponent(btnIn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh1)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSearchMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnBack.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon("D:\\Java\\Baocao\\QuanlyKhachsan\\src\\main\\java\\imgs\\arrow.png")); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        TrangChu trangChu = new TrangChu(TaiKhoan, MatKhau);
        trangChu.setLocationRelativeTo(null);
        trangChu.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRefresh1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefresh1ActionPerformed
        // TODO add your handling code here:
        defaultTableModelHoaDon.setRowCount(0);
        defaultTableModelLinhKien.setRowCount(0);
        clearDataTable();
        LoadDataTable();
    }//GEN-LAST:event_btnRefresh1ActionPerformed

    private void btnTimKiem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiem1ActionPerformed
        // TODO add your handling code here:
        defaultTableModelHoaDon.setRowCount(0);
        List<HoaDon> hoaDons = thanhToanController.SearchThue_MaHD(cbSearchMaHD.getSelectedItem().toString());

        for (HoaDon hoaDon : hoaDons) {
            defaultTableModelHoaDon.addRow(new Object[]{
                hoaDon.getMaHD(),
                hoaDon.getMaLK(),
                hoaDon.getSoLuong(),
                new BigDecimal(hoaDon.getTongTien()).longValue(),
                hoaDon.getNgayMua(),
                hoaDon.getHinhThuc(),
                hoaDon.getMaGiamGia(),});
        }
    }//GEN-LAST:event_btnTimKiem1ActionPerformed

    private void tbHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHoaDonMouseClicked
        // TODO add your handling code here:
        defaultTableModelHoaDon = (DefaultTableModel) tbHoaDon.getModel();
        int row = tbHoaDon.getSelectedRow();
        txtMaHD.setText(defaultTableModelHoaDon.getValueAt(row, 0).toString());
        txtMaLK.setText(defaultTableModelHoaDon.getValueAt(row, 1).toString());
        spinnerSoLuongLK.setValue(defaultTableModelHoaDon.getValueAt(row, 2));
        txtNgayMua.setText(defaultTableModelHoaDon.getValueAt(row, 4).toString());
        String type = defaultTableModelHoaDon.getValueAt(row, 5).toString();
        switch (type) {
            case "Tiền mặt":
                cbHinhThuc.setSelectedItem("Tiền mặt");
                break;
            case "Chuyển khoản":
                cbHinhThuc.setSelectedItem("Chuyển khoản");
                break;
            default:
                break;
        }
        cbMaGiamGia.setSelectedItem(defaultTableModelHoaDon.getValueAt(row, 6).toString());

    }//GEN-LAST:event_tbHoaDonMouseClicked

    private void tbLinkKienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbLinkKienMouseClicked
        // TODO add your handling code here:
        defaultTableModelLinhKien = (DefaultTableModel) tbLinkKien.getModel();
        int row = tbLinkKien.getSelectedRow();
        txtMaLK.setText(defaultTableModelLinhKien.getValueAt(row, 0).toString());
        spinnerSoLuongLK.setValue(1);

    }//GEN-LAST:event_tbLinkKienMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            if (txtMaHD.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn hoặc nhập 1 hóa đơn cần chỉnh sửa", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                if ((Integer) spinnerSoLuongLK.getValue() == 0 || txtMaLK.getText().equals("") || txtNgayMua.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
                } else {
                    int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn sửa hóa đơn " + txtMaHD.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                    if (confirm == JOptionPane.YES_OPTION) {
                        HoaDon hoaDon = new HoaDon();

                        hoaDon.setMaHD(txtMaHD.getText());
                        hoaDon.setMaLK(txtMaLK.getText());
                        hoaDon.setSoLuong((Integer) spinnerSoLuongLK.getValue());
                        hoaDon.setNgayMua(txtNgayMua.getText());
                        hoaDon.setHinhThuc(cbHinhThuc.getSelectedItem().toString());
                        hoaDon.setMaGiamGia("");

                        boolean check = thanhToanController.SuaHoaDon(hoaDon);

                        if (check == true) {
                            JOptionPane.showMessageDialog(null, "Sửa hóa đơn thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                defaultTableModel.setRowCount(0);
                            clearDataTable();
                            LoadDataTable();
                            ClearTextField();
                            txtMaHD.requestFocus();
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sửa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:

        try {
            if (txtMaHD.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn hoặc nhập mã hóa đơn cần xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {
                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa hóa đơn có mã " + txtMaHD.getText() + " không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    boolean check = thanhToanController.XoaHD(txtMaHD.getText());
                    if (check == true) {
                        JOptionPane.showMessageDialog(null, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
//                      defaultTableModel.setRowCount(0);
                        clearDataTable();
                        LoadDataTable();
                        ClearTextField();
                        txtMaHD.requestFocus();
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Xóa thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:

        try {
            if (txtMaHD.getText().equals("") || (Integer) spinnerSoLuongLK.getValue() == 0 || txtMaLK.getText().equals("") || txtNgayMua.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đử thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {

                String HieuLuc = giamGiaController.SearchHieuLuc(cbMaGiamGia.getSelectedItem().toString());

                DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date date = new Date();
                String now = dateFormat.format(date);
                try {
                    Date date1 = dateFormat.parse(HieuLuc);
                    Date date2 = dateFormat.parse(now);

                    if (date2.after(date1)) {
                        JOptionPane.showMessageDialog(null, "Mã giảm đã hết hạn", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                } catch (ParseException ex) {
                    Logger.getLogger(frmThanhToan.class.getName()).log(Level.SEVERE, null, ex);
                }

                List<String> maGiamGias = giamGiaController.GetAllMaGiamGia_Ma();
                if (cbMaGiamGia.getSelectedItem().toString().length() != 0) {
                    if (!maGiamGias.contains(cbMaGiamGia.getSelectedItem().toString())) {
                        JOptionPane.showMessageDialog(null, "Mã giảm giá không hợp lệ", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        cbMaGiamGia.requestFocus();
                        return;
                    }
                }

                List<HoaDon> hoaDons = thanhToanController.GetAllHoaDon();
                for (HoaDon hoaDon : hoaDons) {
                    if (txtMaHD.getText().equals(hoaDon.getMaHD())) {
                        JOptionPane.showMessageDialog(null, "Mã hóa đơn đã tồn tại", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        txtMaHD.requestFocus();
                        return;
                    }
                }

                List<LinhKien> linhKiens = linhKienController.SearchLinhKien_MaLK(txtMaLK.getText());
                for (LinhKien linhKien : linhKiens) {
                    if ((Integer) spinnerSoLuongLK.getValue() > linhKien.getSoLuong()) {
                        JOptionPane.showMessageDialog(null, "Vượt quá số linh kiện còn lại trong cửa hàng", "Thông báo", JOptionPane.WARNING_MESSAGE);
                        spinnerSoLuongLK.requestFocus();
                        return;
                    }
                }

                int confirm = JOptionPane.showConfirmDialog(null, "Bạn có muốn thanh toán hóa đơn có mã '" + txtMaHD.getText() + "' không?", "Thông báo", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    LinhKienDaBan linhKienDaBan = new LinhKienDaBan();

                    linhKienDaBan.setMaLK(txtMaLK.getText());
                    linhKienDaBan.setSoLuong((Integer) spinnerSoLuongLK.getValue());

                    HoaDon hoaDon = new HoaDon();

                    hoaDon.setMaHD(txtMaHD.getText());
                    hoaDon.setMaLK(txtMaLK.getText());
                    hoaDon.setSoLuong((Integer) spinnerSoLuongLK.getValue());
                    hoaDon.setNgayMua(txtNgayMua.getText());
                    hoaDon.setHinhThuc(cbHinhThuc.getSelectedItem().toString());
                    if (cbMaGiamGia.getSelectedItem() == null) {
                        hoaDon.setMaGiamGia(null);
                    } else {
                        hoaDon.setMaGiamGia(cbMaGiamGia.getSelectedItem().toString());
                    }

                    boolean check1 = linhKienDaBanController.ThemLinhKienDaBan(linhKienDaBan);
                    boolean check2 = thanhToanController.ThanhToan_HoaDon(hoaDon);

                    if (check1 == true && check2 == true) {
                        JOptionPane.showMessageDialog(null, "Thanh toán thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                        //                  defaultTableModel.setRowCount(0);
                        clearDataTable();
                        LoadDataTable();
                        ClearTextField();
                        txtMaHD.requestFocus();
                    }
                }
            }
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, "Thanh toán thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void txtNgayMuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNgayMuaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        }
    }//GEN-LAST:event_txtNgayMuaKeyPressed

    private void btnClearThueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearThueActionPerformed
        // TODO add your handling code here:
        ClearTextField();

    }//GEN-LAST:event_btnClearThueActionPerformed

    private void txtMaLKKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaLKKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        }
    }//GEN-LAST:event_txtMaLKKeyPressed

    private void txtMaHDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaHDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtMaLK.requestFocus();
        }
    }//GEN-LAST:event_txtMaHDKeyPressed

    private void btnInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInActionPerformed
        // TODO add your handling code here:
        try {
            if (txtMaHD.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Vui lòng nhập hoặc chọn mã hóa đơn", "Thông báo", JOptionPane.WARNING_MESSAGE);
            } else {

                JFileChooser fileChooser = new JFileChooser("D:\\xls");
                fileChooser.setDialogTitle("Save as");
                // chọn định dạng files excel
                FileNameExtensionFilter extensionFilter = new FileNameExtensionFilter("FILE EXCELS", "xlsx", "xls");
                fileChooser.setFileFilter(extensionFilter);
                int extenchooser = fileChooser.showSaveDialog(null);
                FileOutputStream fileOutputStream = null;
                BufferedOutputStream bos = null;
                XSSFWorkbook excelJtable = null;
                if (extenchooser == JFileChooser.APPROVE_OPTION) {

                    try {
                        // import excel poi libraries to netbeans
                        excelJtable = new XSSFWorkbook();
                        XSSFSheet fSheet = excelJtable.createSheet("HÓA ĐƠN");

                        // Create row
                        XSSFRow row = fSheet.createRow(0);

                        // Create cells
                        XSSFCell cell1 = row.createCell(0);
                        cell1.setCellValue("Mã hóa đơn");

                        cell1 = row.createCell(1);
                        cell1.setCellValue("Tên linh kiện");

                        cell1 = row.createCell(2);
                        cell1.setCellValue("Số lượng");

                        cell1 = row.createCell(3);
                        cell1.setCellValue("Đơn giá");

                        cell1 = row.createCell(4);
                        cell1.setCellValue("Tổng tiền");

                        cell1 = row.createCell(5);
                        cell1.setCellValue("Ngày mua");

                        cell1 = row.createCell(6);
                        cell1.setCellValue("Hạn bảo hành");

                        cell1 = row.createCell(7);
                        cell1.setCellValue("Hình thức thanh toán");

                        cell1 = row.createCell(8);
                        cell1.setCellValue("Giảm giá");

                        XSSFRow fRow = fSheet.createRow(1);

                        List<String> listhoaDons;

                        defaultTableModelHoaDon = (DefaultTableModel) tbHoaDon.getModel();
                        int rowtable = tbHoaDon.getSelectedRow();
                        if (defaultTableModelHoaDon.getValueAt(rowtable, 6).toString().length() == 0) {
                            listhoaDons = thanhToanController.InHoaDon1(txtMaHD.getText());
                            for (int i = 0; i < listhoaDons.size(); i++) {
                                XSSFCell cell = fRow.createCell(i);

                                cell.setCellValue(listhoaDons.get(i));
                            }
                        } else {
                            listhoaDons = thanhToanController.InHoaDon(txtMaHD.getText());
                            for (int i = 0; i < listhoaDons.size(); i++) {
                                XSSFCell cell = fRow.createCell(i);

                                cell.setCellValue(listhoaDons.get(i));
                            }
                        }

                        // mở file kiểu nguyên thủy này giúp mở file có kí tự
                        fileOutputStream = new FileOutputStream(fileChooser.getSelectedFile() + ".xlsx");
                        // dùng bộ nhớ điệm để lưu dữ liệu giúp cho việc xuất dữ liệu ko thông qua luồng trực tiếp mà thông qua luồng đệm nên lấy dự liệu nhanh hơn
                        bos = new BufferedOutputStream(fileOutputStream);
                        excelJtable.write(bos);

                        JOptionPane.showMessageDialog(null, "XUẤT FILE EXCEL THÀNH CÔNG");
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(frmThanhToan.class.getName()).log(Level.SEVERE, null, ex);
                    } finally {
                        if (bos != null) {
                            bos.close();
                        }
                        if (fileOutputStream != null) {
                            fileOutputStream.close();
                        }
                        if (excelJtable != null) {
                            excelJtable.close();
                        }
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "In thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_btnInActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmThanhToan.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmThanhToan.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmThanhToan.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmThanhToan.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmThanhToan fThanhToan = new frmThanhToan();
                fThanhToan.setLocationRelativeTo(null);
                fThanhToan.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClearThue;
    private javax.swing.JButton btnIn;
    private javax.swing.JButton btnRefresh1;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnTimKiem1;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbHinhThuc;
    private javax.swing.JComboBox<String> cbMaGiamGia;
    private javax.swing.JComboBox<String> cbSearchMaHD;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spinnerSoLuongLK;
    private javax.swing.JTable tbHoaDon;
    private javax.swing.JTable tbLinkKien;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaLK;
    private javax.swing.JTextField txtNgayMua;
    // End of variables declaration//GEN-END:variables
}
